# yaml-language-server: $schema=https://json.schemastore.org/github-workflow

name: Deploy
on:
  release:
    types: [published]

jobs:
  marketplaces:
    runs-on: ubuntu-18.04
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: VS Code Marketplace
            url: https://marketplace.visualstudio.com/items?itemName=johnbillion.vscode-wordpress-hooks
            command: deploy-vsce -- -p ${{ secrets.VSCE_TOKEN }}
          - name: Open VSX Registry
            url: https://open-vsx.org/extension/johnbillion/vscode-wordpress-hooks
            command: deploy-openvsx -- -p ${{ secrets.OVSX_TOKEN }}
    name: ${{ matrix.name }}
    steps:
      - uses: octokit/request-action@v2.x
        name: Create GitHub deployment
        id: deployment
        with:
          route: POST /repos/:repository/deployments
          repository: ${{ github.repository }}
          ref: ${{ github.ref }}
          required_contexts: "[]"
          environment: ${{ matrix.name }}
          description: "Deploy version ${{ github.event.release.tag_name }}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - uses: octokit/request-action@v2.x
        name: Set GitHub deployment status
        with:
          route: POST /repos/:repository/deployments/:deployment_id/statuses
          repository: ${{ github.repository }}
          deployment_id: ${{ fromJson( steps.deployment.outputs.data ).id }}
          state: pending
          environment_url: ${{ matrix.url }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: checkout repo
        uses: actions/checkout@v2

      - name: setup node
        uses: actions/setup-node@v1
        with:
          node-version: '12.x'

      - name: clean install dependencies
        run: npm ci

      - name: deploy
        run: npm run ${{ matrix.command }}

      - name: Deployment Succeeded
        if: success()
        uses: octokit/request-action@v2.x
        with:
          route: POST /repos/:repository/deployments/:deployment_id/statuses
          repository: ${{ github.repository }}
          state: success
          deployment_id: ${{ fromJson( steps.deployment.outputs.data ).id }}
          environment_url: ${{ matrix.url }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Deployment Failed
        if: failure()
        uses: octokit/request-action@v2.x
        with:
          route: POST /repos/:repository/deployments/:deployment_id/statuses
          repository: ${{ github.repository }}
          state: failure
          deployment_id: ${{ fromJson( steps.deployment.outputs.data ).id }}
          environment_url: ${{ matrix.url }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  github:
    name: GitHub Milestones
    runs-on: ubuntu-18.04
    steps:
    - name: Get next versions
      id: semvers
      uses: WyriHaximus/github-action-next-semvers@v1.0
      with:
        version: ${{ github.event.release.tag_name }}

    - name: Create next patch milestone
      uses: octokit/request-action@v2.x
      with:
        route: POST /repos/:repository/milestones
        repository: ${{ github.repository }}
        title: ${{ steps.semvers.outputs.patch }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      continue-on-error: true

    - name: Create next minor milestone
      uses: octokit/request-action@v2.x
      with:
        route: POST /repos/:repository/milestones
        repository: ${{ github.repository }}
        title: ${{ steps.semvers.outputs.minor }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      continue-on-error: true

    - name: Create next major milestone
      uses: octokit/request-action@v2.x
      with:
        route: POST /repos/:repository/milestones
        repository: ${{ github.repository }}
        title: ${{ steps.semvers.outputs.major }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      continue-on-error: true
