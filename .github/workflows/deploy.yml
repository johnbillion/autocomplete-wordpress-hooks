name: Deploy
on:
  release:
    types: [published]

jobs:
  vscodemarketplace:
    name: VS Code Marketplace
    runs-on: ubuntu-18.04
    steps:
      - uses: octokit/request-action@v2.x
        name: Create GitHub deployment
        id: deployment
        with:
          route: POST /repos/:repository/deployments
          repository: ${{ github.repository }}
          ref: ${{ github.ref }}
          required_contexts: "[]"
          environment: VS Code Marketplace
          description: "Deploy version ${{ github.event.release.tag_name }}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - uses: octokit/request-action@v2.x
        name: Set GitHub deployment status
        with:
          route: POST /repos/:repository/deployments/:deployment_id/statuses
          repository: ${{ github.repository }}
          deployment_id: ${{ fromJson( steps.deployment.outputs.data ).id }}
          state: pending
          environment_url: https://marketplace.visualstudio.com/items?itemName=johnbillion.vscode-wordpress-hooks
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: checkout repo
        uses: actions/checkout@v2

      - name: setup node
        uses: actions/setup-node@v1
        with:
          node-version: '12.x'

      - name: clean install dependencies
        run: npm ci

      - name: deploy
        run: npm run deploy -- -p ${{ secrets.VSCE_TOKEN }}

      - name: Deployment Succeeded
        if: success()
        uses: octokit/request-action@v2.x
        with:
          route: POST /repos/:repository/deployments/:deployment_id/statuses
          repository: ${{ github.repository }}
          state: success
          deployment_id: ${{ fromJson( steps.deployment.outputs.data ).id }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Deployment Failed
        if: failure()
        uses: octokit/request-action@v2.x
        with:
          route: POST /repos/:repository/deployments/:deployment_id/statuses
          repository: ${{ github.repository }}
          state: failure
          deployment_id: ${{ fromJson( steps.deployment.outputs.data ).id }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
